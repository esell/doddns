
pool:
  vmImage: 'Ubuntu 16.04'

variables:
  GOBIN:  '$(GOPATH)/bin' # Go binaries path
  GOROOT: '/usr/local/go1.11' # Go installation path
  GOPATH: '$(system.defaultWorkingDirectory)/gopath' # Go workspace path
  modulePath: '$(GOPATH)/src/github.com/$(build.repository.name)' # Path to the module's code

steps:
- script: |
    mkdir -p '$(GOBIN)'
    mkdir -p '$(GOPATH)/pkg'
    mkdir -p '$(modulePath)'
    shopt -s extglob
    shopt -s dotglob
    mv !(gopath) '$(modulePath)'
    echo '##vso[task.prependpath]$(GOBIN)'
    echo '##vso[task.prependpath]$(GOROOT)/bin'
  displayName: 'Set up the Go workspace'

- script: |
    go version
    go get -v -t -d ./...
    if [ -f Gopkg.toml ]; then
        curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
        dep ensure
    fi
    go get github.com/axw/gocov/gocov
    go get github.com/mattn/goveralls
    if ! go get github.com/golang/tools/cmd/cover; then
        go get golang.org/x/tools/cmd/cover
    fi
  workingDirectory: '$(modulePath)'
  displayName: 'Get dependencies'
  
- script: |
    go test -v 
    # yolo
    echo '$env:MAPPED_COVERALLS_KEY'
    goveralls -service=travis-ci -repotoken '$env:MAPPED_COVERALLS_KEY'
  continueOnError: 'true'
  workingDirectory: '$(modulePath)'
  displayName: 'Run unit tests'
  env:
    MAPPED_COVERALLS_KEY: $(COVERALLS_KEY)
  
- script: |
    go build -v
  workingDirectory: '$(modulePath)'
  continueOnError: 'true'
  displayName: 'Build app'

